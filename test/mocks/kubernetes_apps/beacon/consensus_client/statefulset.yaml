apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zeus-lighthouse
  labels:
    app.kubernetes.io/name: lighthouse
    app.kubernetes.io/instance: zeus
    app.kubernetes.io/managed-by: zeus
  annotations:
    {}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: lighthouse
      app.kubernetes.io/instance: zeus
  serviceName: zeus-lighthouse
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lighthouse
        app.kubernetes.io/instance: zeus
    spec:
      shareProcessNamespace: true
      initContainers:
        - name: init-chown-data
          image: "busybox:1.34.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "10001:10001", "/data"]
          resources:
            {}
          volumeMounts:
            - name: consensus-client-storage
              mountPath: "/data"
      containers:
        - name: hercules
          image: "registry.digitalocean.com/zeus-fyi/hercules:latest"
          imagePullPolicy: IfNotPresent
          command: [ "/bin/sh" ]
          args: [ "-c","hercules" ]
          volumeMounts:
            - name: cm-lighthouse
              mountPath: "/scripts"
            - name: consensus-client-storage
              mountPath: "/data"
          ports:
            - name: hercules
              containerPort: 9003
              protocol: TCP
        - name: lighthouse
          image: "sigp/lighthouse:v3.2.1-modern"
          imagePullPolicy: IfNotPresent
          command: [ "/bin/sh" ]
          args: [ "-c","/scripts/start.sh" ]
          volumeMounts:
            - name: cm-lighthouse
              mountPath: "/scripts"
            - name: consensus-client-storage
              mountPath: "/data"
          ports:
            - name: p2p-tcp
              containerPort: 9000
              protocol: TCP
            - name: p2p-udp
              containerPort: 9000
              protocol: UDP
            - name: http-api
              containerPort: 5052
              protocol: TCP
            - name: metrics
              containerPort: 5054
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 120
            tcpSocket:
              port: http-api
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: http-api
          resources:
            {}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      volumes:
        - name: cm-lighthouse
          configMap:
            name: cm-lighthouse
            defaultMode: 0744
  volumeClaimTemplates:
    - metadata:
        name: consensus-client-storage
        annotations:
          {}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "240Gi"


