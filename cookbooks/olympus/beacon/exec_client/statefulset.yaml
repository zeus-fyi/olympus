apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zeus-geth
  labels:
    app.kubernetes.io/name: geth
    app.kubernetes.io/instance: zeus-geth
    app.kubernetes.io/managed-by: zeus
  annotations:
    {}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: geth
      app.kubernetes.io/instance: zeus-geth
  serviceName: zeus-geth
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: geth
        app.kubernetes.io/instance: zeus-geth
      annotations:
        {}
    spec:
      initContainers:
        - name: init-chown-data
          image: "busybox:1.34.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "10001:10001", "/data"]
          resources:
            {}
          volumeMounts:
            - name: exec-client-storage
              mountPath: "/data"
      containers:
        - name: athena
          image: "registry.digitalocean.com/zeus-fyi/athena:latest"
          imagePullPolicy: Always
          command: [ "/bin/sh" ]
          args: [ "-c","/athena/start.sh" ]
          volumeMounts:
            - name: exec-client-storage
              mountPath: "/data"
            - name: cm-athena
              mountPath: "/athena"
          env:
            - name: AGE_PKEY
              valueFrom:
                secretKeyRef:
                  name: age-auth
                  key: age-private-key
            - name: DO_SPACES_KEY
              valueFrom:
                secretKeyRef:
                  name: spaces-key
                  key: do-spaces-key
            - name: DO_SPACES_PKEY
              valueFrom:
                secretKeyRef:
                  name: spaces-auth
                  key: do-spaces-private-key
          ports:
            - name: athena
              containerPort: 9003
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "/health"
              port: "http"
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: "/health"
              port: "http"
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
        - name: geth
          image: "ethereum/client-go:v1.10.23"
          imagePullPolicy: IfNotPresent
          command: [ "/bin/sh" ]
          args: [ "-c","/scripts/start.sh" ]
          volumeMounts:
            - name: exec-client-storage
              mountPath: "/data"
            - name: cm-geth
              mountPath: "/scripts"
          ports:
            - name: p2p-tcp
              containerPort: 30303
              protocol: TCP
            - name: p2p-udp
              containerPort: 30303
              protocol: UDP
            - name: http-rpc
              containerPort: 8545
              protocol: TCP
            - name: ws-rpc
              containerPort: 8546
              protocol: TCP
            - name: auth-rpc
              containerPort: 8551
              protocol: TCP
            - name: metrics
              containerPort: 6060
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 120
            tcpSocket:
              port: http-rpc
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: http-rpc
          resources:
            {}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      terminationGracePeriodSeconds: 300
      volumes:
        - name: cm-geth
          configMap:
            name: cm-geth
            defaultMode: 0744
        - name: cm-athena
          configMap:
            name: cm-athena
            defaultMode: 0744
  volumeClaimTemplates:
    - metadata:
        name: exec-client-storage
        annotations:
          {}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "2Ti"
